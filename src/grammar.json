{
  "name": "erlang",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_structure_item"
      }
    },
    "_structure_item": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable"
        },
        {
          "type": "SYMBOL",
          "name": "term"
        }
      ]
    },
    "_identifier": {
      "type": "PATTERN",
      "value": "[A-Z][a-zA-Z0-9@_]*"
    },
    "variable": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PATTERN",
              "value": "_"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_identifier"
        }
      ]
    },
    "term": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "atom"
        },
        {
          "type": "SYMBOL",
          "name": "binary_string"
        },
        {
          "type": "SYMBOL",
          "name": "char"
        },
        {
          "type": "SYMBOL",
          "name": "float"
        },
        {
          "type": "SYMBOL",
          "name": "integer"
        },
        {
          "type": "SYMBOL",
          "name": "list"
        },
        {
          "type": "SYMBOL",
          "name": "map"
        },
        {
          "type": "SYMBOL",
          "name": "record"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "tuple"
        }
      ]
    },
    "atom": {
      "type": "FIELD",
      "name": "value",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "quoted_atom"
          },
          {
            "type": "SYMBOL",
            "name": "unquoted_atom"
          }
        ]
      }
    },
    "quoted_atom": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "'"
        },
        {
          "type": "PATTERN",
          "value": "[\\W!.!\"_#%@^&\\*\\(\\)\\{\\}\\[\\]]+"
        },
        {
          "type": "PATTERN",
          "value": "'"
        }
      ]
    },
    "unquoted_atom": {
      "type": "PATTERN",
      "value": "[a-z][a-zA-Z_0-9.]*"
    },
    "integer": {
      "type": "CHOICE",
      "members": [
        {
          "type": "PATTERN",
          "value": "-?2#[01_]+"
        },
        {
          "type": "PATTERN",
          "value": "-?16#[a-fA-F0-9_]+"
        },
        {
          "type": "PATTERN",
          "value": "-?([\\d*_]*#)?[\\d_]+"
        }
      ]
    },
    "float": {
      "type": "PATTERN",
      "value": "-?([\\d_]*#)?[\\d_]+\\.[\\d_]+(e-?[\\d_]+)?"
    },
    "char": {
      "type": "PATTERN",
      "value": "\\$."
    },
    "string": {
      "type": "PATTERN",
      "value": "\".*\""
    },
    "binary_string": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "<<"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "bin_part"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "bin_part"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "PATTERN",
          "value": ">>"
        }
      ]
    },
    "bin_part": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "integer"
            },
            {
              "type": "SYMBOL",
              "name": "float"
            },
            {
              "type": "SYMBOL",
              "name": "string"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "bin_sized"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "bin_type_list"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "bin_sized": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "integer"
        }
      ]
    },
    "bin_type_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "\\/"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "bin_type"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": "-"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "bin_type"
                  }
                ]
              }
            }
          ]
        }
      ]
    },
    "bin_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "big"
        },
        {
          "type": "STRING",
          "value": "binary"
        },
        {
          "type": "STRING",
          "value": "bits"
        },
        {
          "type": "STRING",
          "value": "bitstring"
        },
        {
          "type": "STRING",
          "value": "bytes"
        },
        {
          "type": "STRING",
          "value": "float"
        },
        {
          "type": "STRING",
          "value": "integer"
        },
        {
          "type": "STRING",
          "value": "little"
        },
        {
          "type": "STRING",
          "value": "native"
        },
        {
          "type": "STRING",
          "value": "signed"
        },
        {
          "type": "STRING",
          "value": "unsigned"
        },
        {
          "type": "STRING",
          "value": "utf16"
        },
        {
          "type": "STRING",
          "value": "utf32"
        },
        {
          "type": "STRING",
          "value": "utf8"
        }
      ]
    },
    "tuple": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "term"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "term"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "term"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "term"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "map": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "map_entry"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "map_entry"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "map_entry": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "term"
        },
        {
          "type": "STRING",
          "value": "=>"
        },
        {
          "type": "SYMBOL",
          "name": "term"
        }
      ]
    },
    "record": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#"
        },
        {
          "type": "SYMBOL",
          "name": "atom"
        },
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "record_field"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ","
                      },
                      {
                        "type": "SYMBOL",
                        "name": "record_field"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "record_field": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "term"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "term"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

